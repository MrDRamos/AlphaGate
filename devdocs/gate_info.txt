AlphaGate
https://www.herox.com/alphapilot/77-test-2

Openining:     123456789 123456789 123456789 123456789 12
             >>                                          <<         2m := 42
Outer:  123456789 123456789 123456789 123456789 123456789 123456
      >>--  --  --  --  --  --  --  --  --  --  --  --  --  --  << 2.6m := 56 
1 Square := 10cm

Apearance: 
Image width = 56 + 58 = 114 := 5.4 m
Gate width  = 56            := 2.6 m
At 5 meters distance ~ 1/2 of the image width
image width - 1024 pixles
1 square = 10cm ~ 21 pixels(@1024) ~= 15 (@720)
=> Gate Width: 21/2 * 56 = 588(@1024) ~= 413 (@720p)
   Opening   : 21/2 * 42 = 441(@1024) ~= 310 (@720)

Dist    Sqaure  Inner   Outer
5       15      310     413
10      7.5     155     206
20      3.8     77.5    103
30      2.5     51.7    68.8
40      1.9     38.8    51.6
50      1.5     31.0    41.3
60      1.3     25.8    34.4
70      1.1     22.1    29.5
80      0.9     19.4    25.8
90      0.8     17.2    22.9
100     0.8     15.5    20.7
 

Corner Patterns:

TopRight 1:
0 1 0 1 0 1
1 0 1 0 1 0
0 0 0 0 0 1
===== 0 1 0

TopLeft  2:
1 0 1 0 1 0
0 1 0 1 0 1
1 0 0 0 0 0
0 1 0 =====

BtmLeft  3:
0 1 0 =====
1 0 0 0 0 0
0 1 0 1 0 1
1 0 1 0 1 0

BtmRight 4:
===== 0 1 0
0 0 0 0 0 1
1 0 1 0 1 0
0 1 0 1 0 1
--
int[4,6] TopRight = (
    (0,1,0,1,0,1),
    (1,0,1,0,1,0),
    (0,0,0,0,0,1),
    (2,2,2,0,1,0)
    );
    
int[4,6] TopLeft = (
    (1,0,1,0,1,0),
    (0,1,0,1,0,1),
    (1,0,0,0,0,0),
    (0,1,0,2,2,2)
    );
    
int[4,6] BtmLeft = (
    (0,1,0,2,2,2),
    (1,0,0,0,0,0),
    (0,1,0,1,0,1),
    (1,0,1,0,1,0)
    );
    
int[4,6] BtmRight = (
    (2,2,2,0,1,0),
    (0,0,0,0,0,1),
    (1,0,1,0,1,0),
    (0,1,0,1,0,1)
    );

======================================
Convolution kernel for large angles:
See some samples: The checkers are very narrow (~2 pixel width x 7 pixel hight)
4x10
1,1,-1,-1
1,1,-1,-1
1,1,-1,-1
1,1,-1,-1
1,1,-1,-1
-1,-1,1,1
-1,-1,1,1
-1,-1,1,1
-1,-1,1,1
-1,-1,1,1

Convolution kernel for head on & small angles:
This large width should handle the blurry images.
10x10
1,1,1,1,1,-1,-1,-1,-1,-1
1,1,1,1,1,-1,-1,-1,-1,-1
1,1,1,1,1,-1,-1,-1,-1,-1
1,1,1,1,1,-1,-1,-1,-1,-1
1,1,1,1,1,-1,-1,-1,-1,-1
-1,-1,-1,-1,-1,1,1,1,1,1
-1,-1,-1,-1,-1,1,1,1,1,1
-1,-1,-1,-1,-1,1,1,1,1,1
-1,-1,-1,-1,-1,1,1,1,1,1
-1,-1,-1,-1,-1,1,1,1,1,1


Also define the inverse kernerls (=J).
Run both kernels K & J  to generate 2 feateures per RGB color = 6 features
Subtract resuling images (K -I)
The result is a large responce at the checker corners.
Extract these corners by thresholding the resulting image to only
inlclude the top 75%

